=> The Set Interface is present in java.util package and extends the Collection interface.
   It is an unordered collection of objects in which duplicate values cannot be stored.
   It is an interface that implements the mathematical set. This interface adds a feature
   that restricts the insertion of duplicate elements.

*  No Specific Order: Does not maintain any specific order of elements (Exceptions: LinkedHashSet
   and TreeSet).
*  Allows One Null Element: Most Set implementations allow a single null element.
*  Implementation Classes: HashSet, LinkedHashSet, and TreeSet.
*  Thread-Safe Alternatives: For thread-safe operations, use ConcurrentSkipListSet or wrap
   a set using Collections.synchronizedSet().


              Method	                                            Description

1. add(element) :-	This method is used to add a specific element to the set. The function adds
                    the element only if the specified element is not already present in the set
                    else the function returns False if the element is already present in the Set.
2. addAll(collection) :-	This method is used to append all of the elements from the mentioned
                            collection to the existing set. The elements are added randomly without
                            following any specific order.
3. clear() :-	This method is used to remove all the elements from the set but not delete the set.
                The reference for the set still exists.
4. contains(element) :-	This method is used to check whether a specific element is present in the
                        Set or not.
5. containsAll(collection) :-	This method is used to check whether the set contains all the
                                  elements present in the given collection or not. This method
                                  returns true if the set contains all the elements and returns
                                  false if any of the elements are missing.
6. hashCode() :-	This method is used to get the hashCode value for this instance of the Set.
                     It returns an integer value which is the hashCode value for this instance of
                      the Set.
7. isEmpty() :-	This method is used to check whether the set is empty or not.
8. iterator() :-	This method is used to return the iterator of the set. The elements from the
                    set are returned in a random order.
9. remove(element) :-	This method is used to remove the given element from the set. This method
                        returns True if the specified element is present in the Set otherwise it
                        returns False.
10.removeAll(collection) :-	This method is used to remove all the elements from the collection
                            which are present in the set. This method returns true if this set
                            changed as a result of the call.
11.retainAll(collection) :-	This method is used to retain all the elements from the set which
                            are mentioned in the given collection. This method returns true if
                            this set changed as a result of the call.
12.size() :-	This method is used to get the size of the set. This returns an integer value
                which signifies the number of elements.
13.toArray() :-	This method is used to form an array of the same elements as that of the Set.